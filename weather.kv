#: import ListItemButton kivy.uix.listview.ListItemButton
#: import ListAdapter kivy.adapters.listadapter.ListAdapter
#: import main main

WeatherRoot:
<WeatherRoot>:

    AddLocationForm

<AddLocationForm>:
    id: location_form
    orientation: "vertical"
    search_input: search_box
    search_results: search_results_list
    BoxLayout:
        height: "40dp"
        size_hint_y: None
        TextInput:
            id:search_box
            size_hint_x: 50
            focus: True
            multiline: False
            on_text_validate: location_form.search_location()

        Button:
            text: "Search"
            size_hint_x: 25
            on_press: location_form.search_location()

        Button:
            text: "Current Location"
            size_hint_x: 25
            on_press: location_form.search_ll()



    ListView:
        id: search_results_list
#            item_strings:[]
        adapter:
            ListAdapter(data=[], cls=main.LocationButton, args_converter=main.locations_args_converter)
        Button:
            height: "40dp"
            size_hint_y: None
            text: "Cancel"
            on_press: app.root.show_current_weather(None)

<LocationButton>:
    text: "{} ({})".format(self.location[0], self.location[1])
    height: "40dp"
    size_hint_y: None
    on_press: app.root.show_current_weather(self.location)

<CurrentWeather>:
    orientation: "vertical"
#    conditions: conditions
    BoxLayout:
        Label:
            text: "{} ({})".format(root.location[0], root.location[1])
            font_size: '30dp'
        Label:
            text: "{}".format(root.temp)
            font_size: '30dp'
    BoxLayout:
#        id: conditions
        orientation: "horizontal"
        Label:
            text: root.conditions
        AsyncImage:
            source: root.conditions_image
    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: "Low: {}".format(root.temp_min)
        Label:
            text: "High: {}".format(root.temp_max)
    BoxLayout:
        orientation:'horizontal'
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Add Location"
            on_press: app.root.show_add_location_form()
        Button:
            text:'Forecast'
            on_press: app.root.show_forecast(root.location)
<Conditions>
    Label:
        text:root.conditions

<Locations@BoxLayout>:
    orientation: 'vertical'
    locations_list: locations_list
    ListView:
        id: locations_list
        adapter:
            ListAdapter(data=[],
            cls=main.LocationButton,
            args_converter = main.locations_args_converter
            )
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Add Location"
            on_press: app.root.show_add_location_form()
        Button:
            text: "Settings"
            on_press: app.open_settings()
<UnknownConditions@Conditions>:
    conditions:""
    canvas.before:
        Color:
            rgb:[0.2,0.2,0.2]
        Ellipse:
            pos: self.pos
            size: self.size


<ClearConditions@BoxLayout>:
    conditions: ""
    canvas:
        Color:
            rgb: [0.8, 0.7, 0.3]
        Line:
            cap: "round"
            width: 3
            points:
                [self.center_x - (self.height / 2),
                self.center_y,
                self.center_x + (self.height / 2),
                self.center_y]
        Line:
            cap: "round"
            width: 3
            points:
                [self.center_x,
                self.center_y - (self.height / 2),
                self.center_x,
                self.center_y + (self.height / 2)]
        Line:
            cap: "round"
            width: 3
            points:
                [self.center_x - (self.height * .35355),
                self.center_y - (self.height * .35355),
                self.center_x + (self.height * .35355),
                self.center_y + (self.height * .35355)]
        Line:
            cap: "round"
            width: 3
            points:
                [self.center_x - (self.height * .35355),
                self.center_y + (self.height * .35355),
                self.center_x + (self.height * .35355),
                self.center_y - (self.height * .35355)]
        Color:
            rgb: [0.6, 0.5, 0.0]
        Ellipse:
            pos: self.center_x - ((self.height - 40) / 2), self.pos[1] + 20
            size: [self.height - 40, self.height - 40]
    Label:
        text: root.conditions

<ForecastLabel@BoxLayout>:
    date: ""
    conditions_image: ""
    conditions: ""
    temp_min: None
    temp_max: None
    canvas.before:
        Color:
            rgb: [0.2,0.2,0.2]
        Line:
            points: [self.pos[0], self.pos[1], self.width, self.pos[1]]
        Label:
            text: root.date
        BoxLayout:
            orientation: "vertical"
            AsyncImage:
                source: root.conditions_image
            Label:
                text: root.conditions
        BoxLayout:
            orientation: "vertical"
            Label:
                text: "Low: {}".format(root.temp_min)
            Label:
                text: "High: {}".format(root.temp_max)

<Forecast>:
    forecast_container: forecast_container
    orientation: "vertical"
    Label:
        size_hint_y: 0.1
        font_size: "30dp"
        text: "{} ({})".format(root.location[0], root.location[1])
    BoxLayout:
        orientation: "vertical"
        id: forecast_container
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Current"
            on_press: app.root.show_current_weather(root.location)

